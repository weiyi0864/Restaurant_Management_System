@using RestaurantManagementSystem.Models
@using Microsoft.AspNetCore.Identity
@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager

<ul class="navbar-nav">
    @if (SignInManager.IsSignedIn(User))
    {
        var user = await UserManager.GetUserAsync(User);
        var isAdmin = user != null && user.IsAdmin;

        @if (isAdmin)
        {
                <li class="nav-item">
                <a class="nav-link text-dark" asp-controller="Admin" asp-action="Index">Dashboard</a>
                </li>
        }
        else
        {
                <li class="nav-item">
                    <a class="nav-link text-dark" asp-controller="Customer" asp-action="Index">My Account</a>
                </li>
                <li class="nav-item">
                    <a class="nav-link text-dark" asp-controller="Customer" asp-action="Reservations">My Reservation</a>
                </li>
                <li class="nav-item">
                    <a class="nav-link text-dark" asp-controller="Customer" asp-action="Orders">My Order</a>
                </li>
        }

        <li class="nav-item">
            <form class="form-inline" asp-controller="Account" asp-action="Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
                <button type="submit" class="nav-link btn btn-link text-dark">Log out</button>
            </form>
        </li>
    }
    else
    {
        <li class="nav-item">
            <a class="nav-link text-dark" asp-controller="Account" asp-action="Register">Register</a>
        </li>
        <li class="nav-item">
            <a class="nav-link text-dark" asp-controller="Account" asp-action="Login">Login</a>
        </li>
    }
</ul>

